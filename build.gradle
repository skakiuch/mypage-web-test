buildscript {
    ext {
        springBootVersion = "2.5.2"
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/plugins-snapshot' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE")
    }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'

group = 'jp.co.mypageweb'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    jcenter()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.springframework.mobile:spring-mobile-starter:2.0.0.M3')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation ('xerces:xercesImpl:2.12.0')
    implementation ('commons-beanutils:commons-beanutils:1.9.4')
    implementation('com.ibm.icu:icu4j:64.2')
    implementation('org.apache.commons:commons-lang3')
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('commons-io:commons-io:2.6')

    runtimeOnly('org.springframework.boot:spring-boot-devtools')

    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
    implementation('org.apache.tomcat.embed:tomcat-embed-core:9.0.31')
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

}

bootRun {
    sourceResources sourceSets.main
    jvmArgs = [
            '-Dspring.output.ansi.enabled=always',
            '-Dspring.profiles.active=local',
    ]
    if (project.hasProperty('jvmArgs')) {
        jvmArgs = (project.jvmArgs.split("\\s+") as List)
    }
}

checkstyle {
    toolVersion "7.1.2"
}

checkstyleMain {
    configFile = file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
}

checkstyleTest {
    configFile = file("${rootProject.projectDir}/config/checkstyle/checkstyle-test.xml")
}
